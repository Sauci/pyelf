name: pyelf CI

on: [ push ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{env.REGISTRY}}
          username: ${{secrets.PKG_REGISTRY_USERNAME}}
          password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
  build-binaries:
    name: Build binaries
    needs: build-and-push-image
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/sauci/pyelf:develop
      credentials:
        username: ${{secrets.PKG_REGISTRY_USERNAME}}
        password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      volumes:
        - ${{github.workspace}}:/usr/project/pyelf
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build binaries
        run: cd tests && ./build.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test_inputs
          path: |
            tests/*.elf
            tests/*.bin
  run-tests:
    name: Run tests
    needs: build-binaries
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/sauci/pyelf:develop
      credentials:
        username: ${{secrets.PKG_REGISTRY_USERNAME}}
        password: ${{secrets.PKG_REGISTRY_RW_TOKEN}}
      volumes:
        - ${{github.workspace}}:/usr/project/pyelf
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: test_inputs
          path: tests
      - name: Run pytest tests
        run: python3 -m pytest $(pwd) -v --cov src/pyelf --cov-report=xml --verbose --cov-fail-under 90
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
